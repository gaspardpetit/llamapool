package config

import (
	"flag"
	"strconv"
)

// MCPRelayConfig holds configuration for the MCP relay agent.
type MCPRelayConfig struct {
	ServerURL   string
	ClientID    string
	ProviderURL string
	Reconnect   bool
}

// BindFlags populates the config from environment variables and binds CLI flags.
func (c *MCPRelayConfig) BindFlags() {
	c.ServerURL = getEnv("SERVER_URL", "ws://localhost:8080/api/mcp/connect")
	c.ClientID = getEnv("CLIENT_ID", "")
	c.ProviderURL = getEnv("PROVIDER_URL", "http://127.0.0.1:7777/")
	if b, err := strconv.ParseBool(getEnv("RECONNECT", "false")); err == nil {
		c.Reconnect = b
	}

	flag.StringVar(&c.ServerURL, "server-url", c.ServerURL, "server WebSocket URL for registration (e.g. ws://localhost:8080/api/mcp/connect)")
	flag.StringVar(&c.ClientID, "client-id", c.ClientID, "client identifier; randomly generated by server if empty")
	flag.StringVar(&c.ProviderURL, "provider-url", c.ProviderURL, "URL of the MCP provider (e.g. http://127.0.0.1:7777/)")
	flag.BoolVar(&c.Reconnect, "reconnect", c.Reconnect, "reconnect to server on failure")
	flag.BoolVar(&c.Reconnect, "r", c.Reconnect, "short for --reconnect")
}
